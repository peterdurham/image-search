{"version":3,"sources":["webpack:///./.cache/gatsby-browser-entry.js","webpack:///./src/components/header.js","webpack:///./src/components/footer.js","webpack:///./src/components/layout.js","webpack:///./.cache/public-page-renderer.js","webpack:///./src/apis/ConceptNet.js","webpack:///./src/apis/Gutenberg.js","webpack:///./src/components/ImageTag.js","webpack:///./src/components/GutenbergQuote.js","webpack:///./src/components/ImageUpload.js","webpack:///./.cache/public-page-renderer-prod.js"],"names":["__webpack_require__","r","__webpack_exports__","d","graphql","StaticQueryContext","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","a","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3__","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3___default","_parse_path__WEBPACK_IMPORTED_MODULE_4__","React","createContext","props","createElement","Consumer","staticQueryData","data","query","render","children","Error","propTypes","PropTypes","object","string","isRequired","func","components_header","react_default","className","gatsby_browser_entry","to","TitleStuff","Footer","href","src","alt","id","Layout","_ref","Fragment","Helmet_default","title","site","siteMetadata","meta","name","content","lang","components_footer","_755544856","node","m","module","exports","require","default","_associations","_getParagraph","_getDictionary","_wordList","_dictionary","ImageTag","index","selectedTags","indexOf","tagName","selectedDisplay","onClick","selectTag","unselectedDisplay","ConceptNet","baseURI","process","GATSBY_CONCEPT_API_BASE_URI","url","path","join","escape","word","encodeURIComponent","toString","toLowerCase","replace","associations","asyncToGenerator_default","regenerator_default","mark","_callee2","wrap","_context2","prev","next","abrupt","fetch","then","_callee","response","json","_context","sent","window","z","map","relation","stop","this","_x2","apply","arguments","_x","Gutenberg","GATSBY_GUTENBERG_API_BASE_URI","loaded_dictionaries","loading_promises","words","dictionary","letter","getDictionary","wordList","_callee3","file","_context3","body","text","split","_callee5","key","_context5","_ref2","_callee4","_context4","_x6","_x3","_x4","_x5","getParagraph","_callee8","finalWords","paragraphs","winner","documentId","winnerIndex","_context8","Stemmer","filter","Promise","all","_ref3","_callee6","_context6","forEach","paragraph","components","count","parseInt","slice","_x8","length","_ref4","_callee7","document","_context7","document_id","_x9","_x7","GutenbergQuote","_this","_React$Component","call","state","componentDidMount","_this2","tags","tag","tagsets","associatedWords","tagset","push","setState","Component","Clarifai","app","App","apiKey","ImageUpload","bindInput","input","urlInput","selectURL","imageURL","imageName","imageDisplayed","linkAPIHandler","models","initModel","GENERAL_MODEL","version","generalModel","predict","imageTags","abbrevTags","uploadDisplay","uploadAPIHandler","base64","displayUpload","selectTagHandler","selected","concat","splice","removeImageHandler","files","bind","assertThisInitialized_default","getFiles","close","imageDisplay","tagsDisplay","components_ImageTag","refineSearch","gutenbergRender","components_GutenbergQuote","uploader","build_min_default","multiple","onDone","placeholder","type","onChange","e","target","value","changeUpload","ProdPageRenderer","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","shape"],"mappings":"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","file":"1-34326597313d7a869d81.js","sourcesContent":["import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport parsePath from \"./parse-path\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n}\n","import React from 'react'\r\nimport { Link } from 'gatsby'\r\nimport './css/header.css'\r\n\r\nexport default props => (\r\n  <div className=\"header\">\r\n    <div className=\"headerContent\">\r\n      <h1>\r\n        <Link to=\"/\">{props.TitleStuff}</Link>\r\n      </h1>\r\n      <h2>An image search for written media</h2>\r\n    </div>\r\n  </div>\r\n)\r\n","import React from 'react'\r\nimport { Link } from 'gatsby'\r\nimport './css/footer.css'\r\nimport { Card, CardImg, CardTitle, CardText, CardBody, Breadcrumb, BreadcrumbItem } from 'reactstrap';\r\n\r\nconst Footer = () => (\r\n  <div className=\"footer\">\r\n    <div className=\"footerContent\">\r\n      <p>\r\n        <a href=\"https://github.com/danielevans/Hackathon\">\r\n          <img src=\"https://i.imgur.com/C2P70Cu.png\" alt=\"Github Logo\" id=\"github-logo\"></img>\r\n        </a>\r\n      </p>\r\n      <p>\r\n        © 2018, PDX Hackathon Group with Peter, Daniel1, DanielA, Aaron, and Tony!\r\n      </p>\r\n    </div>\r\n  </div>\r\n)\r\n\r\nexport default Footer\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport Helmet from 'react-helmet'\r\nimport {StaticQuery, graphql} from 'gatsby'\r\nimport {Link} from 'gatsby'\r\nimport Header from './header'\r\nimport ImageUpload from './ImageUpload'\r\nimport Footer from './footer'\r\nimport './css/layout.css'\r\nimport { Card, CardImg, CardTitle, CardText, CardBody, Breadcrumb, BreadcrumbItem } from 'reactstrap';\r\n\r\nconst Layout = ({children}) => (<StaticQuery query={graphql `\r\n      query SiteTitleQuery {\r\n        site {\r\n          siteMetadata {\r\n            title\r\n          }\r\n        }\r\n      }\r\n    `} render={data => (<> < Helmet title = {\r\n    data.site.siteMetadata.title\r\n  }\r\n  meta = {\r\n    [\r\n      {\r\n        name: 'description',\r\n        content: 'Sample'\r\n      }, {\r\n        name: 'keywords',\r\n        content: 'sample, something'\r\n      }\r\n    ]\r\n  } > <html lang=\"en\"/>\r\n</Helmet>\r\n<Header TitleStuff=\"1000 Words\"/>\r\n<div>\r\n  {children}\r\n</div>\r\n<Footer/>\r\n</>)}/>)\r\n\r\nLayout.propTypes = {\r\n  children: PropTypes.node.isRequired\r\n}\r\n\r\nexport default Layout\r\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","var ConceptNet = {\r\n  baseURI: process.env.GATSBY_CONCEPT_API_BASE_URI,\r\n  url: function (path) {\r\n    return [ConceptNet.baseURI, path].join('');\r\n  },\r\n\r\n  escape(word) {\r\n    return encodeURIComponent(word.toString().toLowerCase().replace(/[\\s]+/, ''));\r\n  },\r\n\r\n  associations: async function (word) {\r\n    return fetch(ConceptNet.url(`/related/c/en/${escape(word)}?filter=/c/en&limit=5`)).then(async (response) => {\r\n      let json = await response.json();\r\n      return window.z = (json[\"related\"] || []).map((relation) => {\r\n        return (relation[\"@id\"] || \"\").replace(/^.*\\//, '').replace('_', ' ');\r\n      });\r\n    }); // TODO: Handle errors in a useful way\r\n  }\r\n};\r\n\r\nexport default ConceptNet;\r\n","import Stemmer from \"en-stemmer\";\r\n\r\nvar Gutenberg = {\r\n  baseURI: process.env.GATSBY_GUTENBERG_API_BASE_URI,\r\n  loaded_dictionaries: {},\r\n  loading_promises: {},\r\n  words: null,\r\n\r\n  url: function (path) {\r\n    return [Gutenberg.baseURI, path].join('');\r\n  },\r\n\r\n  dictionary: async function (word) {\r\n    let letter = word[0];\r\n    if (!letter) {\r\n      return null;\r\n    }\r\n\r\n    letter = letter.toLowerCase();\r\n    if (Gutenberg.loaded_dictionaries[letter]) {\r\n      return Gutenberg.loaded_dictionaries[letter][word];\r\n    }\r\n\r\n    return Gutenberg.getDictionary(`/dictionary/${letter}.json`, Gutenberg.loaded_dictionaries, letter).then((dictionary) => {\r\n      return dictionary[word];\r\n    });\r\n  },\r\n\r\n  wordList: async function() {\r\n    if (!Gutenberg.words) {\r\n      let file = \"/dictionary/words.txt\";\r\n      if (!Gutenberg.loading_promises[file]) {\r\n        Gutenberg.loading_promises[file] = fetch(Gutenberg.url(file)).then(async (response) => {\r\n          let body = await response.text();\r\n          Gutenberg.words = body.split(\"\\n\");\r\n          return Gutenberg.words;\r\n        });\r\n      }\r\n      return Gutenberg.loading_promises[file];\r\n    }\r\n\r\n    return Gutenberg.words;\r\n  },\r\n\r\n  getDictionary: async function(file, dictionary, key) {\r\n    if (!Gutenberg.loading_promises[file]) {\r\n      Gutenberg.loading_promises[file] = fetch(Gutenberg.url(file)).then(async (response) => {\r\n        dictionary[key] = await response.json();\r\n        return dictionary[key];\r\n      });\r\n    }\r\n\r\n    return Gutenberg.loading_promises[file];\r\n  },\r\n\r\n\r\n  // this is the ONLY method that accepts unstemmed words\r\n  getParagraph: async function(words) { // TODO This can be much more intelligent\r\n    let wordList = await Gutenberg.wordList();\r\n\r\n    let finalWords = words.map((word) => {\r\n      return Stemmer(word);\r\n    }).filter((word) => {\r\n      return wordList.indexOf(word) >= 0;\r\n    });\r\n\r\n    let dictionaries = finalWords.map((word) => Gutenberg.dictionary(word));\r\n    let paragraphs = {};\r\n    let winner;\r\n\r\n\r\n    await Promise.all(finalWords.map(async (word) => {\r\n      let wordDictionary = await Gutenberg.dictionary(word);\r\n      wordDictionary.forEach((paragraph) => {\r\n        let components = paragraph.split(\":\");\r\n        let count = parseInt(components[0], 10);\r\n        let id = components.slice(1,3).join(\":\");\r\n        paragraphs[id] = (paragraphs[id] || 0) + count;\r\n\r\n        if (!winner) {\r\n          winner = id;\r\n        } else if (paragraphs[winner] < count) {\r\n          winner = id;\r\n        }\r\n      });\r\n    }));\r\n\r\n    let documentId = winner.split(':')[0];\r\n    let winnerIndex = winner.split(':')[1];\r\n    let path = documentId.split('').slice(0, documentId.length - 1).join('/');\r\n\r\n\r\n    let file = `/gutenberg_data/aleph.gutenberg.org/${path}/${documentId}/${documentId}.json`;\r\n    return fetch(Gutenberg.url(file)).then(async (response) => {\r\n      let document = await response.json();\r\n      return { text: (document[\"paragraphs\"][winnerIndex] || {})[\"text\"], document: document, document_id: documentId };\r\n    });\r\n  },\r\n};\r\n\r\nexport default Gutenberg;\r\n","import React from 'react';\r\nimport './css/imageUpload.css';\r\n\r\nconst ImageTag = (props)=>{\r\n    let selected = props.selectedTags;\r\n    \r\n    let index = selected.indexOf(props.tagName);\r\n    \r\n\r\n    let selectedDisplay = (index>-1) ?\r\n    <div className=\"image__tag image__tag--selected\" onClick={()=>props.selectTag(props.tagName)}>\r\n            {props.tagName}\r\n    </div>: null\r\n\r\n    let unselectedDisplay = (index<0) ?\r\n    <div className=\"image__tag\" onClick={()=>props.selectTag(props.tagName)}>\r\n            {props.tagName}\r\n    </div>: null\r\n\r\n    return(\r\n        <div>\r\n            {selectedDisplay}{unselectedDisplay}\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default ImageTag;","import React from 'react';\r\nimport ConceptNet from '../apis/ConceptNet';\r\nimport Gutenberg from '../apis/Gutenberg';\r\n\r\nimport './css/results.css'\r\n\r\nclass GutenbergQuote extends React.Component  {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { text: \"Loading\" };\r\n  }\r\n  \r\n  \r\n  componentDidMount() {\r\n    Promise.all(this.props.tags.map((tag) => {\r\n      return ConceptNet.associations(tag);\r\n    })).then(async (tagsets) => {\r\n      let associatedWords = [];\r\n      tagsets.forEach((tagset) => {\r\n        (tagset || []).forEach((tag) => {\r\n          if (associatedWords.indexOf(tag) <= 0) {\r\n            associatedWords.push(tag);\r\n          }\r\n        });\r\n      });\r\n\r\n      let paragraph = await Gutenberg.getParagraph(associatedWords);\r\n\r\n      this.setState({\r\n        text: (paragraph || {})[\"text\"]\r\n      });\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <p className=\"results__text\">\r\n        {this.state.text}\r\n      </p>\r\n    );\r\n  }\r\n}\r\n\r\nexport default GutenbergQuote;\r\n","import React from 'react';\r\n// import ReactDOM from 'react-dom';\r\nimport './css/imageUpload.css';\r\n\r\nimport FileBase64 from 'react-file-base64';\r\n\r\nimport ImageTag from './ImageTag';\r\n\r\n// import Results from './Results';\r\n\r\nimport GutenbergQuote from './GutenbergQuote';\r\n\r\nconst Clarifai = require('clarifai');\r\n        \r\nconst app = new Clarifai.App({\r\n    apiKey: '7a58f90bee4743879b6108d0272685bd'\r\n});\r\n\r\n\r\nclass ImageUpload extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.selectTagHandler = this.selectTagHandler.bind(this);\r\n\r\n        this.state = {\r\n            tags: [],\r\n            selectedTags: [],\r\n            urlInput: \"\",\r\n            url: \"\",\r\n            imageName: \"\",\r\n            files: [],\r\n            uploadDisplay: true,\r\n            imageDisplayed: false,\r\n            abbrevTags: []\r\n        }\r\n    }\r\n\r\n    \r\n    \r\n    bindInput = (input) => {\r\n        this.setState({urlInput: input})\r\n    }\r\n    selectURL = () => {\r\n        let imageURL = this.state.urlInput.toString();\r\n        \r\n        this.setState({url: imageURL, imageName: imageURL, selectedTags: [], imageDisplayed: true})\r\n        this.linkAPIHandler(imageURL);\r\n    }\r\n    \r\n    //call clarifai API for image tags\r\n    linkAPIHandler = (url) => {\r\n        app.models.initModel({id: Clarifai.GENERAL_MODEL, version: \"aa7f35c01e0642fda5cf400f543e7c40\"})\r\n        .then(generalModel => {\r\n            return generalModel.predict({url});\r\n        })\r\n        .then(response => {\r\n            var concepts = response['outputs'][0]['data']['concepts']\r\n          \r\n            const imageTags = concepts.map((tag)=>tag.name);\r\n            const abbrevTags = imageTags.slice(0,2);\r\n            this.setState(()=>({tags: imageTags, uploadDisplay: false, abbrevTags: abbrevTags}))\r\n            \r\n        })\r\n    }\r\n\r\n    //call clarifai API for image uploads\r\n    getFiles(files){\r\n        \r\n        this.setState(()=>({\r\n            tags: [],\r\n            selectedTags: [],\r\n            urlInput: \"\",\r\n            url: \"\",\r\n            imageName: \"\",\r\n            files: [],\r\n            uploadDisplay: false,\r\n            imageDisplayed: true,\r\n            abbrevTags: []\r\n        }))\r\n       \r\n        // console.log(\"FILE DATA\", files[0].base64)\r\n        this.uploadAPIHandler(files[0]);\r\n        \r\n    }\r\n   \r\n    uploadAPIHandler = (file) => {\r\n        \r\n        app.models.predict(Clarifai.GENERAL_MODEL, {base64: file.base64.replace(/.*,/,'')}).then(\r\n            (response) => {\r\n                var concepts = response['outputs'][0]['data']['concepts']\r\n                const imageTags = concepts.map((tag)=>tag.name);\r\n                const abbrevTags = imageTags.slice(0,2);\r\n              \r\n              this.setState(()=>({tags: imageTags, url: file.base64, imageName: file.name, uploadDisplay: false, selectedTags: [], imageDisplayed: true, abbrevTags: abbrevTags}))\r\n            }\r\n            // ,\r\n            // function(err) {\r\n            //   // there was an error\r\n            // }\r\n          );\r\n    }\r\n    displayUpload = () => {\r\n        this.setState({uploadDisplay: true})\r\n    }\r\n\r\n    selectTagHandler = (tagName) => {\r\n        let selected = [...this.state.selectedTags];\r\n        \r\n        if(selected.indexOf(tagName)<0){\r\n            \r\n            selected.push(tagName);\r\n            this.setState({selectedTags: selected});\r\n        } else{\r\n            let index = selected.indexOf(tagName)\r\n            \r\n            selected.splice(index, 1);\r\n            this.setState({selectedTags: selected});\r\n        }\r\n    }\r\n    removeImageHandler = () => {\r\n        this.setState(()=>({\r\n            tags: [],\r\n            selectedTags: [],\r\n            urlInput: \"\",\r\n            url: \"\",\r\n            imageName: \"\",\r\n            files: [],\r\n            uploadDisplay: true,\r\n            imageDisplayed: false,\r\n            abbrevTags: []\r\n        }))\r\n    }\r\n\r\n    render() {\r\n        let close = (this.state.imageDisplayed === true) ?\r\n        <div className=\"image__close\" onClick={()=>this.removeImageHandler()}><i className=\"fa fa-window-close\"></i></div> : null\r\n\r\n        let imageDisplay = (this.state.imageDisplayed === true) ?\r\n        <img className=\"image\" src={this.state.url} alt=\"image\"/> : null\r\n\r\n        let tagsDisplay = (this.state.imageDisplayed === true) ?\r\n        <div className=\"image__tags\">\r\n                        {this.state.tags.map((tag)=><ImageTag\r\n                            key={tag} \r\n                            selectTag = {this.selectTagHandler}\r\n                            tagName = {tag}\r\n                            selectedTags = {this.state.selectedTags}\r\n                        />)}\r\n                       <div className=\"image_refine\">{refineSearch}</div>\r\n                    </div> :null\r\n\r\n        let gutenbergRender =(this.state.abbrevTags.length >0) ?\r\n        <GutenbergQuote \r\n                    tags = {this.state.abbrevTags}\r\n                />:null\r\n                            \r\n\r\n\r\n        \r\n        let uploader = (this.state.uploadDisplay === true) ?\r\n        <div>\r\n                <div className=\"main__header\">Upload or link to an image</div>\r\n                <div className=\"upload__options\">\r\n                    <div className=\"upload__link\">\r\n                        <FileBase64\r\n                            multiple={ true }\r\n                            onDone={ this.getFiles.bind(this) } />\r\n                    </div>\r\n                    <div className=\"upload__text\">OR</div>\r\n                    <div className=\"upload__url\">\r\n                        <input placeholder=\"Enter Image URL\" className=\"upload__input\" type=\"text\" onChange={(e)=>this.bindInput(e.target.value)}/>\r\n                        <button className=\"upload__button\" onClick={()=>this.selectURL()}>Select URL</button>\r\n                    </div>\r\n                    \r\n                </div>\r\n                \r\n            </div> : null\r\n\r\n        let changeUpload = (this.state.uploadDisplay === false) ?\r\n        <div className=\"upload__change\">\r\n            <div className=\"upload__current\">Current Upload:{this.state.imageName}</div>\r\n            <button className=\"upload__button\" onClick={()=>this.displayUpload()}>Upload new photo</button> \r\n        </div>: null\r\n\r\n        let refineSearch = (this.state.selectedTags.length > 4) ?\r\n        <button className=\"upload__search\">Search selected tags</button> : null\r\n\r\n\r\n        return(\r\n            <div>\r\n                {uploader}{changeUpload}\r\n                <div className=\"image__display\">\r\n\r\n                    <div className=\"image__div\">\r\n                        {imageDisplay}\r\n                        {close}\r\n                    </div>\r\n\r\n                    {tagsDisplay}\r\n                </div>\r\n                <div className=\"results__header\">Results</div>\r\n                {gutenbergRender}\r\n                \r\n                \r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ImageUpload;\r\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n"],"sourceRoot":""}